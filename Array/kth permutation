class Solution {
    public static void reverse(int[] arr,int i,int j)
    {
        int n=arr.length;
        while(i<j)
        {
            int temp=arr[i];
            arr[i]=arr[j];
            arr[j]=temp;
            i++;
            j--;
        }
    }
    public static void nextPermutation(int arr[])
    {
         // step 1
        int n=arr.length;
        int idx1=-1;
        for(int i=n-2;i>=0;i--)
        {
            if(arr[i]<arr[i+1])
            {
                idx1=i;
                break;
            }
        }
        
        if(idx1==-1)    // in case of last permutation
        {
            int k=0;
            for(int i=n-1;i>=0;i--) arr[k++]=arr[i];
            return ;
        }
        
        // step 2
        int idx2=-1;
        for(int i=n-1;i>=0;i--)
        {
            if(arr[idx1]<arr[i])
            {
                idx2=i;
                break;
            }
        }
        // step 3 swap idx1 and idx2 elements
        int temp=arr[idx1];
        arr[idx1]=arr[idx2];
        arr[idx2]=temp;
        
        //step 4 reverse whole array after idx1
        reverse(arr,idx1+1,n-1);
    }
    public static String kthPermutation(int n,int k) {
        // code here
        //k=k%n;
        int arr[]=new int[n];
        for(int i=0;i<n;i++)
        {
            arr[i]=i+1;
        }
        //for(int i=1;i<=k;i++)
        for(int i=1;i<k;i++)
        nextPermutation(arr);
        
        String str="";
        for(int i=0;i<arr.length;i++)
        str+=Integer.toString(arr[i]);
        return str;
    }
}
