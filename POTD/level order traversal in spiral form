class Spiral
{
    //Function to return a list containing the level order 
    //traversal in spiral form.	
    ArrayList<Integer> findSpiral(Node root) 
    {
        // Your code here
        ArrayList<Integer> list=new ArrayList<>();
        if(root==null) return list;
        Queue<Node> q=new LinkedList<>();
        boolean flag=true;
        
        q.add(root);
        while(!q.isEmpty())
        {
            int size=q.size();
            
            if(flag)
            {
                ArrayList<Integer> tempList=new ArrayList<>();
                while(size-->0)
                {
                    Node curr=q.poll();
                    tempList.add(curr.data);
                    
                    if(curr.left!=null) q.offer(curr.left);
                    if(curr.right!=null) q.offer(curr.right);
                }
                for(int i=tempList.size()-1;i>=0;i--)
                {
                    list.add(tempList.get(i));
                }
                flag=false;
            }
            else{
                while(size-->0)
                {
                    Node curr=q.poll();
                    list.add(curr.data);
                    
                    if(curr.left!=null) q.offer(curr.left);
                    if(curr.right!=null) q.offer(curr.right);
                }
                flag=true;
            }
        }
        
        return list;
    }
}
