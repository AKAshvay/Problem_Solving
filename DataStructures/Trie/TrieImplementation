class Trie{
    Node root;
    
    Trie(){
        root=new Node();
    }
    
    void insert(String word)  // T.C - O(|word|)
    {
        Node node=root;
        for(int i=0;i<word.length();i++)
        {
            char ch=word.charAt(i);
            if(!node.contains(ch))
            {
                node.put(ch);
            }
            node=node.get(ch);  // moves to next refrence node
        }
        
        node.setEnd();
    }
    boolean search(String word)  // T.C - O(|word|)
    {
        Node node=root;
        
        for(int i=0;i<word.length();i++)
        {
            char ch=word.charAt(i);
            
            if(!node.contains(ch)) return false;
            else{
                node=node.get(ch);
            }
        }
        return node.flag;
    }
    
    boolean startsWith(String word)  // T.C - O(|word|)
    {
        Node node=root;
        
        for(int i=0;i<word.length();i++)
        {
            char ch=word.charAt(i);
            
            if(!node.contains(ch)) return false;
            else{
                node=node.get(ch);
            }
        }
        return true;
    }
}
